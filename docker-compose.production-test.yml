services:
  # Production-like site container
  production-site:
    build:
      context: .
      dockerfile: Dockerfile.production
    ports:
      - "8080:80"
    networks:
      - production-test-network
    environment:
      - NODE_ENV=production
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s

  # Analytics mock service
  analytics-mock:
    image: nginx:alpine
    ports:
      - "3001:80"
    volumes:
      - ./test-fixtures/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./test-fixtures/analytics-responses:/usr/share/nginx/html:ro
    networks:
      - production-test-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    command: >
      sh -c "
        echo 'ðŸ”§ Setting up analytics mock...' &&
        mkdir -p /usr/share/nginx/html &&
        echo '{\"status\":\"ok\",\"message\":\"Mock analytics endpoint\"}' > /usr/share/nginx/html/track.json &&
        echo '{\"status\":\"healthy\"}' > /usr/share/nginx/html/health &&
        nginx -g 'daemon off;'
      "

  # Playwright test runner
  e2e-tests:
    build:
      context: .
      dockerfile: Dockerfile.test-runner
    environment:
      - NODE_ENV=test
      - PLAYWRIGHT_TEST_BASE_URL=http://production-site
      - CI=true
    volumes:
      - ./test-results:/app/test-results
      - ./playwright-report:/app/playwright-report
    networks:
      - production-test-network
    depends_on:
      production-site:
        condition: service_healthy
      analytics-mock:
        condition: service_healthy
    profiles:
      - testing

networks:
  production-test-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.25.0.0/16