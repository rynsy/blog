# Docker Compose for UI Testing

services:
  ui-tests:
    build:
      context: ..
      dockerfile: packages/tests/Dockerfile.test
    environment:
      - CI=true
      - NODE_ENV=test
      - PLAYWRIGHT_TEST_BASE_URL=http://localhost:3000
    volumes:
      # Mount test results out
      - ./test-results:/app/packages/tests/test-results
      - ./playwright-report:/app/packages/tests/playwright-report
      # Optional: mount for development
      - ./packages/tests/e2e:/app/packages/tests/e2e:ro
    working_dir: /app/packages/tests
    command: ["--reporter=html", "--reporter=json"]
    
  # Alternative: Production-like testing with nginx
  production-ui-tests:
    build:
      context: ..
      dockerfile: packages/tests/Dockerfile.test
    environment:
      - CI=true
      - NODE_ENV=production
      - PLAYWRIGHT_TEST_BASE_URL=http://production-site:80
    volumes:
      - ./test-results:/app/packages/tests/test-results
      - ./playwright-report:/app/packages/tests/playwright-report
    depends_on:
      - production-site
    command: ["--project=visual-regression", "--project=performance"]
      
  production-site:
    build:
      context: ../packages/site
      dockerfile: Dockerfile.production
    ports:
      - "8080:80"
    environment:
      - NODE_ENV=production

  # Visual regression testing service
  visual-tests:
    build:
      context: ..
      dockerfile: packages/tests/Dockerfile.test
    environment:
      - CI=true
      - NODE_ENV=test
      - PLAYWRIGHT_TEST_BASE_URL=http://localhost:3000
    volumes:
      - ./test-results:/app/packages/tests/test-results
      - ./packages/tests/test-results-visual:/app/packages/tests/test-results
    command: ["--project=visual-regression", "--update-snapshots"]
    
  # Performance testing service  
  performance-tests:
    build:
      context: ..
      dockerfile: packages/tests/Dockerfile.test
    environment:
      - CI=true
      - NODE_ENV=test
      - PLAYWRIGHT_TEST_BASE_URL=http://localhost:3000
    volumes:
      - ./test-results:/app/packages/tests/test-results
    command: ["--project=performance", "--reporter=json"]
    
  # Accessibility testing service
  accessibility-tests:
    build:
      context: ..
      dockerfile: packages/tests/Dockerfile.test  
    environment:
      - CI=true
      - NODE_ENV=test
      - PLAYWRIGHT_TEST_BASE_URL=http://localhost:3000
    volumes:
      - ./test-results:/app/packages/tests/test-results
    command: ["--project=accessibility-desktop", "--project=accessibility-mobile"]